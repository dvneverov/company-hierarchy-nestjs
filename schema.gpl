# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type CreateDepartmentDto {
  id: Float!
  name: String!
}

type CreateEmployeeDto {
  id: Float!
  name: String!
  surname: String!
  avatar: String!
}

type CreateRoleDto {
  id: Float!
  name: String!
  descendants: [Float!]!
  parentId: ID
  employeeId: ID
  departmentId: ID!
  children: [CreateRoleDto!]
  employee: CreateEmployeeDto
  department: CreateDepartmentDto!
}

input InputDepartment {
  name: String!
}

input InputEmployee {
  name: String!
  surname: String!
  avatar: String
}

input InputRole {
  name: String!
  parentId: ID
  employeeId: ID
  departmentId: ID!
}

input InputUpdateDepartment {
  name: String!
}

input InputUpdateEmployee {
  name: String
  surname: String
  avatar: String
}

input InputUpdateRole {
  name: String
  parentId: ID
  employeeId: ID
  departmentId: ID
}

type Mutation {
  createEmployee(data: InputEmployee!): CreateEmployeeDto!
  updateEmployee(data: InputUpdateEmployee!, id: Float!): UpdateEmployeeDto!
  createDepartment(data: InputDepartment!): CreateDepartmentDto!
  updateDepartment(data: InputUpdateDepartment!, id: Float!): UpdateDepartmentDto!
  createRole(data: InputRole!): CreateRoleDto!
  updateRole(data: InputUpdateRole!, id: Float!): UpdateRoleDto!
}

type Query {
  employee: [CreateEmployeeDto!]!
  department: [CreateDepartmentDto!]!
  role: [CreateRoleDto!]!
}

type UpdateDepartmentDto {
  id: Float!
  name: String!
}

type UpdateEmployeeDto {
  id: Float!
  name: String!
  surname: String!
  avatar: String!
}

type UpdateRoleDto {
  id: Float!
  name: String!
  parentId: ID!
  employeeId: ID!
  departmentId: ID!
}
